#!/bin/bash

set -o errexit

start(){

    #Stop NetworkManager
    echo "[i] stopping interfaces..."
    for INTERFACE in $(ls --hide=lo /sys/class/net)
    do
        /usr/bin/ip link set $INTERFACE down
    done

    sleep 1

    #Kill apps
    echo "[i] killing apps..."

    /usr/bin/killall -q "firefox" || true
    /usr/bin/killall -q "chromium" || true
    /usr/bin/killall -q "spotify" || true
    /usr/bin/killall -q "qbittorrent" || true

    sleep 1

    #Create torrc
    echo "[i] creating torrc..."

    /usr/bin/echo "Log notice file /tmp/bator.log" >> /tmp/bator.torrc
    /usr/bin/echo "RunAsDaemon 1" >> /tmp/bator.torrc
    /usr/bin/echo "DataDirectory /var/lib/tor" >> /tmp/bator.torrc
    /usr/bin/echo "HardwareAccel 1" >> /tmp/bator.torrc
    /usr/bin/echo "SocksPort 127.0.0.1:9050 IsolateDestAddr IsolateDestPort IsolateClientProtocol" >> /tmp/bator.torrc
    /usr/bin/echo "TransPort 127.0.0.1:9040 IsolateDestAddr IsolateDestPort IsolateClientProtocol" >> /tmp/bator.torrc
    /usr/bin/echo "DNSPort 127.0.0.1:53" >> /tmp/bator.torrc
    /usr/bin/echo "AutomapHostsOnResolve 1" >> /tmp/bator.torrc
    /usr/bin/echo "AutomapHostsSuffixes .exit,.onion" >> /tmp/bator.torrc
    /usr/bin/echo "VirtualAddrNetworkIPv4 10.192.0.0/10" >> /tmp/bator.torrc
    /usr/bin/echo "VirtualAddrNetworkIPv6 [FC00::]/7" >> /tmp/bator.torrc
    /usr/bin/echo "User tor" >> /tmp/bator.torrc
    /usr/bin/echo "ControlPort 9051" >> /tmp/bator.torrc
    /usr/bin/echo "CookieAuthentication 1" >> /tmp/bator.torrc
    /usr/bin/echo "UseEntryGuards 1" >> /tmp/bator.torrc

    sleep 1

    #DNS
    echo "[i] setting DNS..."

    /usr/bin/mv /etc/resolv.conf /tmp/bator.resolvconf
    /usr/bin/echo -e "nameserver 127.0.0.1\n" > /etc/resolv.conf
    /usr/bin/chmod 0644 /etc/resolv.conf
    /usr/bin/chattr +i /etc/resolv.conf

    sleep 1

    # Set IPv6 Privacy Addressing
    echo "[i] setting 'Privacy Addressing'..."

    /usr/bin/sysctl -q -w net.ipv6.conf.all.use_tempaddr=2
    /usr/bin/sysctl -q -w net.ipv6.conf.default.use_tempaddr=2

    sleep 1

    #Backup rules
    echo "[i] saving iptables..."

    /usr/bin/iptables-save > /tmp/bator.iptables

    sleep 1

    echo "[i] saving ip6tables..."

    /usr/bin/ip6tables-save > /tmp/bator.ip6tables

    sleep 1

    #Set iptables
    echo "[i] setting iptables..."

    #Flush iptables
    /usr/bin/iptables -F
    /usr/bin/iptables -t nat -F
    /usr/bin/iptables -X

    #Set default policy
    /usr/bin/iptables -P INPUT DROP
    /usr/bin/iptables -P OUTPUT DROP
    /usr/bin/iptables -P FORWARD DROP

    #Dont nat Tor
    /usr/bin/iptables -t nat -A OUTPUT -m owner --uid-owner tor -j RETURN

    #Redirect DNS
    /usr/bin/iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
    /usr/bin/iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
    /usr/bin/iptables -t nat -A OUTPUT -p udp -m owner --uid-owner tor -m udp --dport 53 -j REDIRECT --to-ports 53

    #Resolve .onion
    /usr/bin/iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
    /usr/bin/iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040

    #Allow private IPs
    /usr/bin/iptables -t nat -A OUTPUT -d 127.0.0.0/8 -j RETURN
    /usr/bin/iptables -A OUTPUT -d 127.0.0.0/8 -j ACCEPT
    /usr/bin/iptables -t nat -A OUTPUT -d 10.0.0.0/8 -j RETURN
    /usr/bin/iptables -A OUTPUT -d 10.0.0.0/8 -j ACCEPT
    /usr/bin/iptables -t nat -A OUTPUT -d 172.16.0.0/12 -j RETURN
    /usr/bin/iptables -A OUTPUT -d 172.16.0.0/12 -j ACCEPT
    /usr/bin/iptables -t nat -A OUTPUT -d 192.168.0.0/16 -j RETURN
    /usr/bin/iptables -A OUTPUT -d 192.168.0.0/16 -j ACCEPT

    #Redirect everything to TransPort
    /usr/bin/iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports 9040
    /usr/bin/iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports 9040
    /usr/bin/iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports 9040

    #Allow related + Tor output, reject others
    /usr/bin/iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    /usr/bin/iptables -A OUTPUT -m owner --uid-owner tor -j ACCEPT
    /usr/bin/iptables -A OUTPUT -j REJECT

    #Simple stateful firewall
    /usr/bin/iptables -A INPUT -i lo -j ACCEPT
    /usr/bin/iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    /usr/bin/iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset
    /usr/bin/iptables -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
    /usr/bin/iptables -A INPUT -p icmp -j REJECT --reject-with icmp-port-unreachable
    /usr/bin/iptables -A INPUT -j REJECT --reject-with icmp-proto-unreachable

    sleep 1

    echo "[i] setting ip6tables..."

    #Flush iptables
    /usr/bin/ip6tables -F
    /usr/bin/ip6tables -t nat -F
    /usr/bin/ip6tables -X

    #Set default policy
    /usr/bin/ip6tables -P INPUT DROP
    /usr/bin/ip6tables -P OUTPUT DROP
    /usr/bin/ip6tables -P FORWARD DROP

    #Dont nat Tor
    /usr/bin/ip6tables -t nat -A OUTPUT -m owner --uid-owner tor -j RETURN

    #Redirect DNS
    /usr/bin/ip6tables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
    /usr/bin/ip6tables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
    /usr/bin/ip6tables -t nat -A OUTPUT -p udp -m owner --uid-owner tor -m udp --dport 53 -j REDIRECT --to-ports 53

    #Resolve .onion
    /usr/bin/ip6tables -t nat -A OUTPUT -p tcp -d fc00::/7 -j REDIRECT --to-ports 9040
    /usr/bin/ip6tables -t nat -A OUTPUT -p udp -d fc00::/7 -j REDIRECT --to-ports 9040

    #Allow private IPs
    /usr/bin/ip6tables -t nat -A OUTPUT -d ::1/128 -j RETURN
    /usr/bin/ip6tables -A OUTPUT -d ::1/128 -j ACCEPT

    #Redirect everything to TransPort
    /usr/bin/ip6tables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports 9040
    /usr/bin/ip6tables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports 9040
    /usr/bin/ip6tables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports 9040

    #Allow related + Tor output, reject others
    /usr/bin/ip6tables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    /usr/bin/ip6tables -A OUTPUT -m owner --uid-owner tor -j ACCEPT
    /usr/bin/ip6tables -A OUTPUT -j REJECT

    #Simple stateful firewall
    /usr/bin/ip6tables -A INPUT -i lo -j ACCEPT
    /usr/bin/ip6tables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    /usr/bin/ip6tables -A INPUT -p tcp -j REJECT --reject-with tcp-reset
    /usr/bin/ip6tables -A INPUT -p udp -j REJECT
    /usr/bin/ip6tables -A INPUT -p icmp -j REJECT
    /usr/bin/ip6tables -A INPUT -j REJECT

    sleep 1

    #Start interfaces
    echo "[i] starting interfaces..."
    for INTERFACE in $(ls --hide=lo /sys/class/net)
    do
        /usr/bin/ip link set $INTERFACE up
    done

    #Start Tor
    echo "[i] starting Tor..."

    /usr/bin/tor --hush -f /tmp/bator.torrc

    echo "[+] bator started!"
    echo "[i] you can find everything in '/tmp' folder"

}

stop(){

    #Stop interfaces
    echo "[i] stopping interfaces..."
    for INTERFACE in $(ls --hide=lo /sys/class/net)
    do
        /usr/bin/ip link set $INTERFACE down
    done

    sleep 1

    #Restore DNS
    echo "[i] restoring DNS..."

    /usr/bin/chattr -i /etc/resolv.conf
    /usr/bin/mv /tmp/bator.resolvconf /etc/resolv.conf

    sleep 1

    #Enable IPv6
    echo "[i] disabling 'Privacy Addressing'..."

    /usr/bin/sysctl -q -w net.ipv6.conf.all.use_tempaddr=0
    /usr/bin/sysctl -q -w net.ipv6.conf.default.use_tempaddr=0

    sleep 1

    #Flush iptables
    echo "[i] flushing iptables..."

    /usr/bin/iptables -P INPUT ACCEPT
    /usr/bin/iptables -P FORWARD ACCEPT
    /usr/bin/iptables -P OUTPUT ACCEPT
    /usr/bin/iptables -F
    /usr/bin/iptables -t nat -F
    /usr/bin/iptables -X

    sleep 1

    echo "[i] flushing ip6tables..."

    /usr/bin/ip6tables -P INPUT ACCEPT
    /usr/bin/ip6tables -P FORWARD ACCEPT
    /usr/bin/ip6tables -P OUTPUT ACCEPT
    /usr/bin/ip6tables -F
    /usr/bin/ip6tables -t nat -F
    /usr/bin/ip6tables -X

    sleep 1

    #Restore iptables
    echo "[i] restoring iptables..."

    /usr/bin/iptables-restore /tmp/bator.iptables

    sleep 1

    echo "[i] restoring ip6tables..."

    /usr/bin/ip6tables-restore /tmp/bator.ip6tables

    sleep 1

    #Kill Tor
    echo "[i] killing Tor..."

    /usr/bin/killall tor

    sleep 1

    #Remove left-over files
    echo "[i] removing left-over files..."

    /usr/bin/rm -rf /tmp/bator.*

    sleep 1
    
    #Start interfaces
    echo "[i] starting interfaces..."
    for INTERFACE in $(ls --hide=lo /sys/class/net)
    do
        /usr/bin/ip link set $INTERFACE up
    done

}

reload(){

    #Remove previous log
    echo "[i] removing previous log..."

    /usr/bin/rm /tmp/bator.log

    #Stop Tor
    echo "[i] killing Tor..."

    /usr/bin/killall tor

    #Start Tor
    echo "[i] starting Tor..."

    /usr/bin/tor -f /tmp/bator.torrc

}

case $1 in
    "start")
        start
        ;;
    "stop")
        stop
        ;;
    "reload")
        reload
        ;;
    *)
        echo "something went wrong!"
        echo "given argument: $1"
        ;;
esac
